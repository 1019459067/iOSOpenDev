/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import "SBDeviceLockViewDelegate.h"
#import "AFUISnippetDelegate.h"
#import "AFSpeechDelegate.h"
#import "SBShowcaseViewController.h"
#import "AFAssistantUIService.h"
#import "SBDeviceLockViewOwner.h"
#import "VSSpeechSynthesizerDelegate.h"
#import "SpringBoard-Structs.h"
#import "UITableViewDelegate.h"
#import "UITableViewDataSource.h"
#import "SBAssistantTourGuideDelegate.h"
#import "SBAssistantTableViewCellDelegate.h"
#import "SBAssistantViewDelegate.h"

@class SBAssistantTourGuideController, SBAssistantView, SBAssistantSpaceController, SBAssistantSpeechElement, SBAssistantNavigationController, SBAssistantUserUtteranceController, AFUISnippetController, NSTimer, SBAssistantUserUtterance, AFConnection, SAUIAddViews, NSString, VSSpeechSynthesizer, NSMutableArray, BluetoothDevice, AFSpeechRequestOptions, NSMutableSet;
@protocol SBAssistantControllerOwner;

@interface SBAssistantController : SBShowcaseViewController <AFAssistantUIService, UITableViewDataSource, UITableViewDelegate, VSSpeechSynthesizerDelegate, AFSpeechDelegate, SBAssistantViewDelegate, AFUISnippetDelegate, SBAssistantTableViewCellDelegate, SBAssistantTourGuideDelegate, SBDeviceLockViewDelegate, SBDeviceLockViewOwner> {
	id<SBAssistantControllerOwner> _owner;	// 12 = 0xc
	SBAssistantView *_assistantDisplay;	// 16 = 0x10
	AFConnection *_assistantConnection;	// 20 = 0x14
	NSMutableArray *_conversation;	// 24 = 0x18
	SAUIAddViews *_tempPendingElements;	// 28 = 0x1c
	NSMutableArray *_speechQueue;	// 32 = 0x20
	NSMutableArray *_tempSpeechQueue;	// 36 = 0x24
	NSMutableArray *_repeatQueue;	// 40 = 0x28
	NSMutableSet *_modalRequesters;	// 44 = 0x2c
	NSMutableSet *_snippetsToToss;	// 48 = 0x30
	unsigned _tableAnimationCount;	// 52 = 0x34
	VSSpeechSynthesizer *_synthesizer;	// 56 = 0x38
	NSString *_spokenLanguageCode;	// 60 = 0x3c
	BOOL _pendingRecord;	// 64 = 0x40
	NSTimer *_statusTimer;	// 68 = 0x44
	int _state;	// 72 = 0x48
	int _currentPhase;	// 76 = 0x4c
	NSString *_currentAudioRoute;	// 80 = 0x50
	BluetoothDevice *_bluetoothDevice;	// 84 = 0x54
	BOOL _awaitingResponse;	// 88 = 0x58
	AFUISnippetController *_pinnedSnippet;	// 92 = 0x5c
	AFUISnippetController *_pendingPinnedSnippet;	// 96 = 0x60
	AFUISnippetController *_lastSnippetInTranscript;	// 100 = 0x64
	SBAssistantUserUtterance *_pendingSpeechUtterance;	// 104 = 0x68
	SBAssistantTourGuideController *_tourGuideSnippet;	// 108 = 0x6c
	SBAssistantSpaceController *_extraSpace;	// 112 = 0x70
	SBAssistantUserUtteranceController *_lastCorrectableUtterance;	// 116 = 0x74
	SBAssistantSpeechElement *_currentSpeechElement;	// 120 = 0x78
	id _passcodeUnlockCompletionHandler;	// 124 = 0x7c
	NSMutableArray *_pausedEvents;	// 128 = 0x80
	AFSpeechRequestOptions *_activationOptions;	// 132 = 0x84
	BOOL _notifiedAfterActivate;	// 136 = 0x88
	BOOL _shouldSpeak;	// 137 = 0x89
	BOOL _assistantVisible;	// 138 = 0x8a
	BOOL _expectsFaceContact;	// 139 = 0x8b
	BOOL _guideDone;	// 140 = 0x8c
	BOOL _connectionCurrentlyAvailable;	// 141 = 0x8d
	BOOL _unlockedDeviceWithinAssistant;	// 142 = 0x8e
	BOOL _requestFinished;	// 143 = 0x8f
	BOOL _hasAddedToTTS;	// 144 = 0x90
	BOOL _hasShownFirstTimeGuide;	// 145 = 0x91
	BOOL _delayConnectionEndUntilPhoneCall;	// 146 = 0x92
	BOOL _deactivatedForPendingPhoneCall;	// 147 = 0x93
	BOOL _registeredForActiveNotifications;	// 148 = 0x94
	BOOL _registeredForCallNotifications;	// 149 = 0x95
	BOOL _keyboardAnimating;	// 150 = 0x96
	BOOL _removedSnippetDuringThisUpdate;	// 151 = 0x97
	BOOL _notifyingChangeInLastSnippet;	// 152 = 0x98
	BOOL _endVoiceSessionWhenDoneSpeaking;	// 153 = 0x99
	NSString *_currentAddViewsIdentifier;	// 156 = 0x9c
	int _networkErrorIndex;	// 160 = 0xa0
	SBAssistantNavigationController *_viewController;	// 164 = 0xa4
	NSMutableArray *_nextRecognitionAudioInputPaths;	// 168 = 0xa8
	BOOL _shouldRouteToReceiver;	// 172 = 0xac
	BOOL _audioRouteNeedsUpdate;	// 173 = 0xad
	BOOL _enableProxForGesture;	// 174 = 0xae
}
@property(readonly, assign, nonatomic) BOOL unlockedDevice;	// G=0x175cb1; @synthesize=_unlockedDeviceWithinAssistant
@property(assign, nonatomic) id<SBAssistantControllerOwner> owner;	// G=0x175ca1; S=0x175b71; @synthesize=_owner
@property(copy) NSString *currentAudioRoute;	// G=0x176391; S=0x176369; @synthesize=_currentAudioRoute
@property(retain, nonatomic) BluetoothDevice *bluetoothDevice;	// G=0x175c91; S=0x1763a9; @synthesize=_bluetoothDevice
@property(assign, nonatomic) BOOL willOpenTelURL;	// G=0x175c81; S=0x17ed49; @synthesize=_delayConnectionEndUntilPhoneCall
@property(readonly, assign, getter=isAssistantVisible) BOOL assistantVisible;	// G=0x175b29; converted property
@property(readonly, assign) BOOL expectsFaceContact;	// G=0x175b39; converted property
+ (id)sharedInstance;	// 0x176321
+ (id)sharedInstanceIfExists;	// 0x175b19
+ (BOOL)deviceSupported;	// 0x176291
+ (BOOL)preferenceEnabled;	// 0x17626d
+ (BOOL)supportedAndEnabled;	// 0x1761a9
+ (BOOL)shouldEnterAssistant;	// 0x175eb5
+ (BOOL)hasUserBeenEducated;	// 0x175e91
+ (void)setUserHasBeenEducated;	// 0x175e75
+ (void)educateUserAboutAssistantWhenAppropriate;	// 0x175e59
+ (BOOL)canActivateWithActiveTouchesUsingOptions:(id)activeTouchesUsingOptions;	// 0x175e35
- (id)init;	// 0x175cc1
- (void)dealloc;	// 0x17f861
- (float)bottomBarHeight;	// 0x17f7e5
- (id)_connection;	// 0x17f6d5
- (void)_clearConnection;	// 0x17f66d
- (void)_cleanUpConnectionIfNeeded;	// 0x17f609
- (id)view;	// 0x17f5f9
- (id)_extraSpace;	// 0x17f595
- (id)_assistantView;	// 0x17f445
- (void)_detachFromAssistantView;	// 0x17f369
- (void)viewWillAppear;	// 0x17f301
- (void)viewDidAppear;	// 0x17f2e1
- (void)viewWillDisappear;	// 0x17f2a1
- (void)viewDidDisappear;	// 0x17f22d
- (void)setRevealMode:(int)mode;	// 0x17f1a5
// converted property getter: - (BOOL)isAssistantVisible;	// 0x175b29
- (int)viewState;	// 0x17f169
- (BOOL)currentRouteExpectsFaceContact;	// 0x17f10d
- (void)_updateExpectsFaceContact;	// 0x17f0a9
- (void)_registerForActiveNotifications:(BOOL)activeNotifications;	// 0x17eec9
- (void)_registerForCallNotification:(BOOL)callNotification;	// 0x17ee0d
// declared property setter: - (void)setWillOpenTelURL:(BOOL)openTelURL;	// 0x17ed49
- (void)_updateCurrentAudioRoute;	// 0x17ec99
- (void)updateCurrentAudioRoute;	// 0x17ec6d
- (void)_setExpectsFaceContact:(BOOL)contact;	// 0x17ebc5
- (void)_endBTVoiceSession;	// 0x17eb5d
// converted property getter: - (BOOL)expectsFaceContact;	// 0x175b39
- (BOOL)shouldShowLockStatusBarTime;	// 0x17eb3d
- (BOOL)shouldShowLockStatusBarIcon;	// 0x17eb19
- (void)noteSpokenLanguageDidChange;	// 0x17ea01
- (BOOL)assistantVisibleAndRequiresPasscodeUnlockForOpenURL:(id)openURL withDisplay:(id)display;	// 0x17e9c9
- (void)passcodeUnlockWithCompletion:(id)completion;	// 0x17e941
- (BOOL)preventGesture;	// 0x17e91d
- (void)_keyboardWillShow:(id)_keyboard;	// 0x17e769
- (void)_keyboardDidShow:(id)_keyboard;	// 0x175b49
- (void)_keyboardWillHide:(id)_keyboard;	// 0x17e675
- (void)_keyboardDidHide:(id)_keyboard;	// 0x175b5d
- (void)_callStateChanged:(id)changed;	// 0x17e625
- (void)_cleanUpPreheatedConnection;	// 0x17e5ed
- (void)preheat;	// 0x17e54d
- (void)_updateConnectionAudioRouteIfNecessary;	// 0x17e491
- (void)activateWithOptions:(id)options;	// 0x17dee9
- (void)deactivate;	// 0x17de01
- (void)_clearDeactivatedForPendingPhoneCall;	// 0x17ddd1
- (void)_setDeactivatedForPendingPhoneCall:(BOOL)pendingPhoneCall withDelay:(double)delay;	// 0x17dd49
- (void)_displayDidLaunchFrontmost:(id)_display;	// 0x17dd11
- (BOOL)cancelPendingPhoneCall;	// 0x17dcb1
// declared property setter: - (void)setOwner:(id)owner;	// 0x175b71
- (void)dismissAssistant;	// 0x17dc6d
- (void)dismissAssistantWithFade:(double)fade;	// 0x17dbb9
- (void)dismissAssistantForAlertActivation:(id)alertActivation;	// 0x17db29
- (void)_clearState;	// 0x17dae9
- (void)_sendActivationNotification;	// 0x17da3d
- (void)_notifyAllSnippetsOfInterruption;	// 0x17da15
- (void)resetAndStartListeningWithOptions:(id)options;	// 0x17d8bd
- (void)pauseConnectionCallbacks:(BOOL)callbacks;	// 0x17d771
- (BOOL)allowsEventOnlySuspension;	// 0x175b81
- (double)autoDimTime;	// 0x175b85
- (void)proximityStateChanged:(id)changed;	// 0x17d6bd
- (void)_stopSpeechAndHandleAudioInput;	// 0x17d649
- (void)_micButtonHit:(id)hit;	// 0x17d4d1
- (void)_appendExchange:(id)exchange;	// 0x17d485
- (void)_appendSnippet:(id)snippet;	// 0x17d2c1
- (void)_removeSnippet:(id)snippet;	// 0x17d0d1
- (void)_reloadSnippet:(id)snippet animation:(int)animation;	// 0x17cfe9
- (void)_beginConversationUpdates;	// 0x17ce79
- (void)_endConversationUpdates;	// 0x17c82d
- (void)_startProcessingRequest;	// 0x17c7c9
- (void)_clearLastCorrectableUtterance;	// 0x17c77d
- (void)_appendUserUtterance:(id)utterance beginProcessing:(BOOL)processing;	// 0x17c6b1
- (void)_submitQuery:(id)query;	// 0x17c621
- (void)_handleAudioInput;	// 0x17c5c1
- (void)_handleAudioTimeout;	// 0x175b91
- (void)_listen;	// 0x17c55d
- (void)_listenAttemptDidFinish;	// 0x175b95
- (void)_listenFailed;	// 0x17c51d
- (void)_setState:(int)state;	// 0x175ba9
- (void)_setViewState:(int)state;	// 0x17c4bd
- (void)_clearStatusTimer;	// 0x17c47d
- (void)_scheduleStatusTimer;	// 0x17c401
- (void)_statusTimerFired:(id)fired;	// 0x17c3c1
- (void)_addSpeakableTextForExchange:(id)exchange listenFollowingSpeech:(BOOL)speech;	// 0x17c2a9
- (id)_addAceView:(id)view phase:(int)phase;	// 0x17bf59
- (unsigned)_replaceLastSnippetWithSameSnippetClass:(id)sameSnippetClass withPhase:(int)phase replacePhase:(int)phase3;	// 0x17bd45
- (void)_scheduleTempSpeechTimer;	// 0x17bcdd
- (void)_tempSpeechTimerFired;	// 0x17bc1d
- (void)_clearTempSpeechTimer;	// 0x17bbdd
- (void)_scheduleTempElementTimer;	// 0x17bb71
- (void)_tempElementTimerFired;	// 0x17baf9
- (void)_clearTempElements;	// 0x17bab1
- (void)_clearTempElementTimer;	// 0x17ba71
- (void)_scheduleScrollToPinned;	// 0x17ba39
- (void)_cancelScrollToPinned;	// 0x17b9f9
- (void)_scrollToPinnedTimer;	// 0x17b965
- (void)_scheduleEducateUserGestureIfNecessary;	// 0x17b8c1
- (void)_clearEducateUserGestureTimer;	// 0x17b881
- (void)_clearScreen;	// 0x17b871
- (void)_clearConversation;	// 0x17b551
- (void)_addAceViewAdornmentsIfNecessary:(id)necessary;	// 0x17b489
- (BOOL)_handleConfirmationPhaseAddViews:(id)views phase:(int)phase;	// 0x17b1fd
- (void)_pinSnippetToTop:(id)top;	// 0x17b181
- (float)_requiredSpaceForCurrentPin;	// 0x17b0fd
- (float)_requiredExtraSpaceFromIndex:(unsigned)index;	// 0x17af19
- (CGSize)_calculatedViewSizeForSnippet:(id)snippet suggestedHeight:(float)height;	// 0x17ae35
- (id)_snippetWithFirstResponder;	// 0x17ada9
- (void)_positionSnippet:(id)snippet aboveKeyboard:(CGRect)keyboard withCurve:(int)curve duration:(double)duration atPosition:(int)position positionHandler:(id)handler;	// 0x17abad
- (void)_restoreFromKeyboardShownWithCurve:(int)curve duration:(double)duration positionHandler:(id)handler;	// 0x17ab35
- (id)_tableCellIndexPathForSnippet:(id)snippet;	// 0x17aa51
- (void)_addSnippetToToss:(id)toss;	// 0x17a9e5
- (void)_processSnippetTosses;	// 0x17a8cd
- (void)_tellUserAboutGesture;	// 0x17a73d
- (CGSize)_rowSize:(unsigned)size;	// 0x17a715
- (CGSize)_rowSize:(unsigned)size suggestedHeight:(float)height;	// 0x17a661
- (void)_removeTemporaryElementsExcept:(id)except;	// 0x17a4d1
- (void)_say:(id)say;	// 0x17a48d
- (void)_say:(id)say forced:(BOOL)forced;	// 0x17a385
- (BOOL)_isSpeaking;	// 0x17a341
- (void)_addTemporaryMessageToSpeechQueue:(id)speechQueue;	// 0x17a2c1
- (void)_clearTemporarySpeechQueue;	// 0x17a285
- (void)_sendSuccessCommandForRefIdentifier:(id)refIdentifier;	// 0x17a1e9
- (void)_sendFailedCommandForRefIdentifier:(id)refIdentifier;	// 0x17a14d
- (void)_processSpeechQueue;	// 0x179e41
- (void)_stopSpeakingAndProcessCommands:(BOOL)commands;	// 0x179c01
- (unsigned long)_prepareSoundFromString:(id)string;	// 0x179b1d
- (void)_playSound:(unsigned long)sound;	// 0x179b15
- (void)_startListenTimer;	// 0x179acd
- (void)_cancelListenTimer;	// 0x179a8d
- (void)_addViews:(id)views;	// 0x17995d
- (void)_handleCommand:(id)command;	// 0x1797dd
- (void)_handleAddViewsCommand:(id)command;	// 0x179561
- (void)_handleClearScreenCommand:(id)command;	// 0x179481
- (void)_handleOpenLinkCommand:(id)command;	// 0x17930d
- (void)_handleSayItCommand:(id)command;	// 0x1790d1
- (void)_handleRepeatItCommand:(id)command;	// 0x179019
- (void)_handlePresentPasscodeUnlockCommand:(id)command;	// 0x178e39
- (void)_handleShowGuideCommand:(id)command;	// 0x178c29
- (int)_phaseFromPhaseString:(id)phaseString;	// 0x178bd5
- (BOOL)_phaseReplacesPreviousAvailableSnippetContents:(int)contents;	// 0x175c09
- (BOOL)_phaseIsTemporary:(int)temporary;	// 0x175c15
- (BOOL)_phaseForTemporaryQueue:(int)temporaryQueue;	// 0x175c2d
- (BOOL)_phaseIsInterstitial:(int)interstitial;	// 0x175c45
- (id)_lastReplaceableTemporarySnippet;	// 0x178b3d
- (unsigned)_lastNonSpaceSnippetIndex;	// 0x178b0d
- (id)_lastNonSpaceSnippet;	// 0x178ac5
- (unsigned)_lastNonTemporarySnippetAbsentFrom:(id)from;	// 0x178a15
- (id)_lastNonStaticSnippet;	// 0x1789a1
- (void)_tossOutLastSnippetAndRemoveFollowingViews;	// 0x178371
- (id)_snippetsOfPhase:(int)phase;	// 0x17827d
- (BOOL)_shouldActAsIfInConfirmationPhase;	// 0x17822d
- (void)_notifyFirstResponseReceivedAndHideGuideIfNecessary;	// 0x178101
- (void)_forceSnippetsToResignFirstResponder;	// 0x1780c5
- (void)_notifyWantsFullRevealIfNecessary:(id)necessary;	// 0x178019
- (void)_clearModality;	// 0x177fdd
- (BOOL)_isModal;	// 0x177fad
- (void)_updateModality;	// 0x177eb5
- (void)_stampLastSnippetWithStamp:(int)stamp;	// 0x177e71
- (void)reinterpretUserUtterance:(id)utterance;	// 0x177c19
- (void)_handleError:(id)error;	// 0x177a2d
- (void)_showPasscodeKeypad:(BOOL)keypad;	// 0x177831
- (void)_entryFinishedWithPassword:(id)password;	// 0x177761
- (BOOL)_haveAudioInputPaths;	// 0x17772d
- (void)_startRequestWithNextAudioInputPath;	// 0x1775c1
- (void)setNextRecognitionAudioInputPaths:(id)paths;	// 0x177571
- (void)_clearPausedEvents;	// 0x177545
- (void)_executeOrPendCommand:(id)command;	// 0x177465
- (id)supportedCommands;	// 0x1773cd
- (void)_clearRepeatQueue;	// 0x1773ad
- (void)_repeatLastResponseWithFallback:(id)fallback;	// 0x177285
- (void)assistantConnection:(id)connection receivedCommand:(id)command;	// 0x17722d
- (void)assistantConnectionConversationFinished:(id)finished;	// 0x175c51
- (void)assistantConnection:(id)connection conversationFailedWithError:(id)error;	// 0x177219
- (void)assistantConnection:(id)connection voiceCaptureFinishedWithText:(id)text;	// 0x175c55
- (void)assistantConnection:(id)connection voiceCaptureFailedWithError:(id)error;	// 0x177205
- (void)assistantConnectionRequestFinished:(id)finished;	// 0x17718d
- (void)assistantConnection:(id)connection requestFailedWithError:(id)error;	// 0x177179
- (void)assistantConnection:(id)connection shouldSpeak:(BOOL)speak;	// 0x175c59
- (int)tableView:(id)view numberOfRowsInSection:(int)section;	// 0x177159
- (id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;	// 0x177055
- (float)tableView:(id)view heightForRowAtIndexPath:(id)indexPath;	// 0x17701d
- (void)scrollViewDidScroll:(id)scrollView;	// 0x176ff5
- (void)scrollViewDidEndScrollingAnimation:(id)scrollView;	// 0x176fb9
- (void)_delayedDeactivateAssistant;	// 0x176f95
- (void)assistantConnectionSpeechRecordingWillBegin:(id)assistantConnectionSpeechRecording;	// 0x176f51
- (void)assistantConnectionSpeechRecordingDidBegin:(id)assistantConnectionSpeechRecording;	// 0x176e9d
- (void)assistantConnectionSpeechRecordingDidEnd:(id)assistantConnectionSpeechRecording;	// 0x176e5d
- (void)assistantConnection:(id)connection speechRecordingDidFail:(id)speechRecording;	// 0x176df5
- (void)assistantConnection:(id)connection didRecognizeSpeechPhrases:(id)phrases correctionIdentifier:(id)identifier;	// 0x176cf1
- (void)assistantConnection:(id)connection speechRecognitionDidFail:(id)speechRecognition;	// 0x176cc5
- (void)speechSynthesizerDidStartSpeaking:(id)speechSynthesizer;	// 0x175c69
- (void)speechSynthesizer:(id)synthesizer didFinishSpeaking:(BOOL)speaking withError:(id)error;	// 0x176cb5
- (void)assistantViewSearchScrolledToView:(id)view;	// 0x176c5d
- (void)assistantView:(id)view madeRequest:(id)request;	// 0x176c49
- (void)assistantViewAnimatedIn:(id)anIn;	// 0x175c6d
- (void)assistantViewAnimatedOut:(id)anOut;	// 0x175c71
- (float)assistantViewAudioLevel:(id)level;	// 0x176c29
- (void)assistantTableViewCellDidRemoveFromSuperview:(id)assistantTableViewCell;	// 0x176bf5
- (void)snippetController:(id)controller changeSizeTo:(CGSize)to;	// 0x176a81
- (void)snippetControllerRemoveView:(id)view;	// 0x176a3d
- (void)snippetController:(id)controller sendGenericAceCommand:(id)command;	// 0x1769e9
- (id)snippetControllerViewController:(id)controller;	// 0x176951
- (void)snippetControllerTransactionComplete:(id)complete;	// 0x176921
- (void)snippetControllerHaltTTS:(id)tts;	// 0x17690d
- (void)snippetControllerCancelScroll:(id)scroll;	// 0x1768fd
- (BOOL)snippetControllerPreventInteraction:(id)interaction;	// 0x1768ad
- (void)snippetController:(id)controller stampMostRecentSnippetWithStamp:(int)stamp;	// 0x176881
- (id)snippetController:(id)controller disambiguationCellForAceObject:(id)aceObject context:(id)context;	// 0x176845
- (id)snippetController:(id)controller domainObjectForIdentifier:(id)identifier;	// 0x1767e1
- (id)snippetControllerEffectiveBundleForCoreLocation:(id)coreLocation;	// 0x176795
- (BOOL)snippetControllerIsDevicePasscodeLocked:(id)locked;	// 0x176739
- (void)snippetControllerModalityRequest:(id)request;	// 0x1766b9
- (void)snippetControllerModalityRelinquish:(id)relinquish;	// 0x17667d
- (void)snippetController:(id)controller addMessage:(id)message phase:(id)phase speakableDescription:(id)description;	// 0x176601
- (void)snippetController:(id)controller addMessage:(id)message speakableDescription:(id)description;	// 0x1765cd
- (void)tourGuideWantsToDisplayGuide:(id)displayGuide;	// 0x176569
- (void)deviceLockViewPasscodeEntered:(id)entered;	// 0x1764d5
- (void)deviceLockViewCancelButtonPressed:(id)pressed;	// 0x1764a1
- (void)deviceUnlockSucceeded;	// 0x175c75
- (void)deviceUnlockFailed;	// 0x1763d1
- (BOOL)isDisplayingErrorStatus;	// 0x175c79
- (BOOL)shouldUseTransparentStatusBar;	// 0x175c7d
// declared property getter: - (BOOL)willOpenTelURL;	// 0x175c81
// declared property getter: - (id)bluetoothDevice;	// 0x175c91
// declared property setter: - (void)setBluetoothDevice:(id)device;	// 0x1763a9
// declared property getter: - (id)currentAudioRoute;	// 0x176391
// declared property setter: - (void)setCurrentAudioRoute:(id)route;	// 0x176369
// declared property getter: - (id)owner;	// 0x175ca1
// declared property getter: - (BOOL)unlockedDevice;	// 0x175cb1
@end

