/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import "SpringBoard-Structs.h"
#import "SBUnknownSuperclass.h"
#import "RadiosPreferencesDelegate.h"

@class RadiosPreferences, NSString, SBAlertItem, NSTimer;

@interface SBTelephonyManager : SBUnknownSuperclass <RadiosPreferencesDelegate> {
	void *_suspendDormancyAssertion;	// 4 = 0x4
	NSString *_operatorName;	// 8 = 0x8
	NSString *_lastKnownNetworkCountryCode;	// 12 = 0xc
	unsigned _suspendDormancyEnabled;	// 16 = 0x10
	unsigned _usingWifi : 1;	// 20 = 0x14
	unsigned _usingVPN : 1;	// 20 = 0x14
	unsigned _iTunesNeedsToRecheckActivation : 1;	// 20 = 0x14
	unsigned _pretendingToSearch : 1;	// 20 = 0x14
	unsigned _callForwardingIndicator : 2;	// 20 = 0x14
	BOOL _isNetworkTethering;	// 21 = 0x15
	int _numberOfNetworkTetheredDevices;	// 24 = 0x18
	unsigned _hasShownWaitingAlert : 1;	// 28 = 0x1c
	SBAlertItem *_activationAlertItem;	// 32 = 0x20
	int _numActivationFailures;	// 36 = 0x24
	unsigned _loggingCallAudio : 1;	// 40 = 0x28
	NSString *_inCallStatusPreamble;	// 44 = 0x2c
	NSTimer *_inCallTimer;	// 48 = 0x30
	RadiosPreferences *_radioPrefs;	// 52 = 0x34
	int _needsUserIdentificationModule;	// 56 = 0x38
}
@property(assign) int callForwardingIndicator;	// G=0x4ec15; S=0x51e91; converted property
@property(assign, getter=isNetworkRegistrationEnabled) BOOL networkRegistrationEnabled;	// G=0x507fd; S=0x506e9; converted property
@property(assign) BOOL isInAirplaneMode;	// G=0x50529; S=0x50565; converted property
@property(assign) BOOL isUsingVPNConnection;	// G=0x4ecc9; S=0x50409; converted property
@property(retain) NSString *operatorName;	// G=0x4f425; S=0x4f599; converted property
@property(readonly, retain) NSString *lastKnownNetworkCountryCode;	// G=0x51345; converted property
@property(readonly, assign) BOOL isNetworkTethering;	// G=0x4ed11; converted property
@property(readonly, assign) int numberOfNetworkTetheredDevices;	// G=0x4ed21; converted property
+ (id)sharedTelephonyManager;	// 0x4edcd
+ (id)sharedTelephonyManagerCreatingIfNecessary:(BOOL)necessary;	// 0x4ed81
- (id)init;	// 0x522ad
- (void)_postStartupNotification;	// 0x52269
- (CTServerConnectionRef)_serverConnection;	// 0x52209
- (void)_avSystemControllerDidError:(id)_avSystemController;	// 0x521a9
- (void)_serverConnectionDidError:(XXStruct_K5nmsA)_serverConnection;	// 0x520e1
- (void)SBTelephonyDaemonRestartHandler;	// 0x51f99
- (void)updateTTYIndicator;	// 0x51f3d
- (double)inCallDuration;	// 0x51ef9
// converted property setter: - (void)setCallForwardingIndicator:(int)indicator;	// 0x51e91
- (void)updateCallForwardingIndicator;	// 0x51d91
// converted property getter: - (int)callForwardingIndicator;	// 0x4ec15
- (void)updateSpringBoard;	// 0x51c45
- (void)updateStatusBarCallState:(BOOL)state;	// 0x51aad
- (void)updateStatusBarCallDuration;	// 0x5193d
- (void)setLimitTransmitPowerPerBandEnabled:(BOOL)enabled;	// 0x518c9
- (void)setFastDormancySuspended:(BOOL)suspended;	// 0x51839
- (void)updateAirplaneMode;	// 0x517c9
- (void)airplaneModeChanged;	// 0x516d9
- (void)updateCalls;	// 0x51541
- (void)_updateState;	// 0x514dd
- (BOOL)updateLocale;	// 0x51409
- (BOOL)updateNetworkLocale;	// 0x513e9
- (BOOL)_updateLastKnownNetworkCountryCode;	// 0x51395
// converted property getter: - (id)lastKnownNetworkCountryCode;	// 0x51345
- (void)handleSIMReady;	// 0x512a1
- (id)urlWithScheme:(id)scheme fromDialingNumber:(id)dialingNumber abUID:(int)uid urlPathAddition:(id)addition forceAssist:(BOOL)assist suppressAssist:(BOOL)assist6 wasAlreadyAssisted:(BOOL)assisted;	// 0x510c9
- (id)displayForOutgoingCallURL:(id)outgoingCallURL;	// 0x50ebd
- (void)_delayedAudioResume;	// 0x50ea1
- (long long)getRowIDOfLastCallInsert;	// 0x50e9d
- (id)allMissedCallsAfterRowID:(long long)anId;	// 0x50e21
- (int)callCount;	// 0x50dd1
- (BOOL)activeCallExists;	// 0x4ec29
- (BOOL)heldCallExists;	// 0x4ec41
- (BOOL)incomingCallExists;	// 0x4ec59
- (BOOL)outgoingCallExists;	// 0x4ec71
- (BOOL)multipleCallsExist;	// 0x50d81
- (BOOL)inCallUsingReceiverForcingRoutingToReceiver:(BOOL)receiver;	// 0x50cd9
- (BOOL)callWouldUseReceiver:(BOOL)receiver;	// 0x50c39
- (BOOL)shouldHangUpOnLock;	// 0x50bcd
- (BOOL)inCall;	// 0x50b5d
- (void)disconnectIncomingCall;	// 0x50b41
- (BOOL)isCallAmbiguous;	// 0x50b05
- (void)swapCalls;	// 0x50ae1
- (void)disconnectAllCalls;	// 0x50ac1
- (void)disconnectCall;	// 0x50a29
- (void)disconnectCallAndActivateHeld;	// 0x50a25
- (void)unmute;	// 0x50995
- (void)setIncomingVoiceCallsEnabled:(BOOL)enabled;	// 0x50945
- (BOOL)isLoggingCallAudio;	// 0x4ec89
- (void)_setIsLoggingCallAudio:(BOOL)audio;	// 0x4ec9d
- (void)dumpBasebandState:(id)state;	// 0x508e1
- (BOOL)MALoggingEnabled;	// 0x50861
// converted property getter: - (BOOL)isNetworkRegistrationEnabled;	// 0x507fd
// converted property setter: - (void)setNetworkRegistrationEnabled:(BOOL)enabled;	// 0x506e9
- (int)dataConnectionType;	// 0x50675
- (BOOL)cellularRadioCapabilityIsActive;	// 0x5061d
- (BOOL)EDGEIsOn;	// 0x505b5
- (id)_radioPrefs;	// 0x4ecb9
// converted property setter: - (void)setIsInAirplaneMode:(BOOL)airplaneMode;	// 0x50565
// converted property getter: - (BOOL)isInAirplaneMode;	// 0x50529
- (BOOL)isUsingSlowDataConnection;	// 0x50509
- (BOOL)isTTYEnabled;	// 0x504e1
- (void)setIsUsingWiFiConnection:(BOOL)connection;	// 0x50475
// converted property setter: - (void)setIsUsingVPNConnection:(BOOL)connection;	// 0x50409
// converted property getter: - (BOOL)isUsingVPNConnection;	// 0x4ecc9
- (void)_postDataConnectionTypeChangedNotification;	// 0x503c5
- (id)copyMobileEquipmentInfo;	// 0x50371
- (id)copyTelephonyCapabilities;	// 0x50309
- (void)_setCurrentActivationAlertItem:(id)item;	// 0x5024d
- (void)_provisioningUpdateWithStatus:(int)status;	// 0x4fec9
- (BOOL)isEmergencyCallActive;	// 0x4fe6d
- (BOOL)isInEmergencyCallbackMode;	// 0x4fe11
- (void)exitEmergencyCallbackMode;	// 0x4fe09
- (void)configureForTTY:(BOOL)tty;	// 0x4fdb1
- (BOOL)shouldPromptForTTY;	// 0x4fcf9
- (id)ttyTitle;	// 0x4fc05
- (void)_resetCTMMode;	// 0x4fbd5
- (void)_headphoneChanged:(id)changed;	// 0x4fb0d
- (void)_proximityChanged:(id)changed;	// 0x4faad
- (void)postponementStatusChanged;	// 0x4fa51
- (void)_setRegistrationStatus:(int)status;	// 0x4f981
- (void)_updateRegistrationNow;	// 0x4f945
- (void)_cancelFakeService;	// 0x4f90d
- (void)_startFakeServiceIfNecessary;	// 0x4f889
- (void)_stopFakeService;	// 0x4f835
- (BOOL)_pretendingToSearch;	// 0x4ecdd
- (void)_prepareToAnswerCall;	// 0x4f7c9
- (void)carrierBundleChanged;	// 0x4f74d
- (id)_fetchOperatorName;	// 0x4f72d
- (void)_reallySetOperatorName:(id)name;	// 0x4f689
// converted property setter: - (void)setOperatorName:(id)name;	// 0x4f599
- (void)operatorBundleChanged;	// 0x4f475
// converted property getter: - (id)operatorName;	// 0x4f425
- (int)registrationStatus;	// 0x4ecf1
- (BOOL)canOnlyMakeEmergencyCalls;	// 0x4ed01
- (void)checkForRegistrationSoon;	// 0x4f375
- (id)SIMStatus;	// 0x4f321
- (BOOL)needsUserIdentificationModule;	// 0x4f29d
- (int)registrationCauseCode;	// 0x4f249
- (void)noteSIMUnlockAttempt;	// 0x4f1f9
// converted property getter: - (BOOL)isNetworkTethering;	// 0x4ed11
// converted property getter: - (int)numberOfNetworkTetheredDevices;	// 0x4ed21
- (void)setIsNetworkTethering:(BOOL)tethering withNumberOfDevices:(int)devices;	// 0x4ef9d
- (void)noteWirelessModemChanged;	// 0x4ee01
- (void)_wokeFromSleep:(id)sleep;	// 0x4ede1
@end
